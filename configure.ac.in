dnl $Id: configure.in.in 2439 2007-01-20 10:41:39Z benny $
dnl
dnl Copyright (c) 2006-2007
dnl         The Thunar development team. All rights reserved.
dnl
dnl Originally written for Thunar by Benedikt Meurer <benny@xfce.org>.
dnl Modified by Peter de Ridder <peter@xfce.org>.
dnl

dnl ***************************
dnl *** Version information ***
dnl ***************************
m4_define([tvp_version_major], [0])
m4_define([tvp_version_minor], [0])
m4_define([tvp_version_micro], [4])
m4_define([tvp_version_build], [r@REVISION@])
m4_define([tvp_version_tag], [svn]) # Leave empty for releases
m4_define([tvp_version], [tvp_version_major().tvp_version_minor().tvp_version_micro()ifelse(tvp_version_tag(), [], [], [tvp_version_tag()-tvp_version_build()])])

dnl *******************************************
dnl *** Debugging support for SVN snapshots ***
dnl *******************************************
m4_define([tvp_debug_default], [ifelse(tvp_version_tag(), [svn], [yes], [minimum])])

dnl ***************************
dnl *** Initialize autoconf ***
dnl ***************************
AC_COPYRIGHT([Copyright (c) 2006-2007 Peter de Ridder <peter@xfce.org>.])
AC_INIT([thunar-vcs-plugin], [tvp_version], [thunar-dev@xfce.org])
AC_PREFIX_DEFAULT([$(pkg-config --variable prefix thunarx-1 || echo /usr/local)])
AC_PREREQ([2.50])
AC_CANONICAL_TARGET()

dnl ***************************
dnl *** Initialize automake ***
dnl ***************************
AM_INIT_AUTOMAKE([1.8 dist-bzip2 tar-ustar])
AM_CONFIG_HEADER([config.h])
AM_MAINTAINER_MODE()

dnl *******************************
dnl *** Check for UNIX variants ***
dnl *******************************
AC_AIX()
AC_ISC_POSIX()
AC_MINIX()

dnl ********************************
dnl *** Check for common headers ***
dnl ********************************
AC_CHECK_HEADERS([sys/wait.h])

dnl ********************************
dnl *** Check for basic programs ***
dnl ********************************
AC_PROG_CC()
AC_PROG_LD()
AC_PROG_INSTALL()
AM_PROG_CC_C_O()

dnl **************************
dnl *** Initialize libtool ***
dnl **************************
AC_DISABLE_STATIC()
AC_PROG_LIBTOOL()

dnl ******************************
dnl *** Check for i18n support ***
dnl ******************************
XDT_I18N([@LINGUAS@])

dnl ***********************************
dnl *** Check for required packages ***
dnl ***********************************
XDT_CHECK_PACKAGE([THUNARX], [thunarx-1], [0.4.0])
XDT_CHECK_PACKAGE([THUNAR_VFS], [thunar-vfs-1], [0.4.0])
XDT_CHECK_PACKAGE([GTK], [gtk+-2.0], [2.6.0])
XDT_CHECK_PACKAGE([GLIB], [glib-2.0], [2.6.0])
XDT_CHECK_PACKAGE([GOBJECT], [gobject-2.0], [2.6.0])

dnl ***********************************
dnl *** Check for optional packages ***
dnl ***********************************
XDT_CHECK_OPTIONAL_PACKAGE([APR], [apr-1], [0.9.7], [subversion], [libsvn])
if test x"$APR_FOUND" = x"yes"; then
    found_subversion=yes
    AC_CHECK_LIB([svn_subr-1], [main], , [found_subversion=no])
    AC_CHECK_LIB([svn_fs-1], [main], , [found_subversion=no])
    AC_CHECK_LIB([svn_wc-1], [main], , [found_subversion=no])
    AC_CHECK_LIB([svn_client-1], [main], , [found_subversion=no])
    if test x"$found_subversion" = x"yes"; then
        AC_DEFINE([HAVE_SUBVERSION], [1], [Define if libsvn is present])
    fi
else
    AC_MSG_CHECKING([for optional package subversion])
    AC_MSG_RESULT([disabled])
fi
AM_CONDITIONAL([HAVE_SUBVERSION], [test x"$found_subversion" = x"yes"])

AC_ARG_ENABLE([git], 
    AC_HELP_STRING([--enable-git], [Enable git (default)])
AC_HELP_STRING([--disable-git], [Disable git]),
    [check_for_git=$enableval], [check_for_git=yes])
AC_MSG_CHECKING([for optional package git])
if test x"$check_for_git" = x"yes"; then
    found_git=yes
    AC_MSG_RESULT([enabled])
    AC_DEFINE([HAVE_GIT], [1], [Define if git is endabled])
else
    AC_MSG_RESULT([disabled])
fi
AM_CONDITIONAL([HAVE_GIT], [test x"$found_git" = x"yes"])

dnl ***********************************
dnl *** Check for debugging support ***
dnl ***********************************
AC_ARG_ENABLE([debug],
AC_HELP_STRING([--enable-debug=@<:@no/minimum/yes/full@:>@], [Turn on debugging @<:@default=tvp_debug_default@:>@]),
  [], [enable_debug=tvp_debug_default])
AC_MSG_CHECKING([whether to enable debugging support])
if test x"$enable_debug" = x"full" -o x"$enable_debug" = x"yes"; then
  dnl Check whether the compiler accepts the -fno-strict-aliasing
  dnl switch, as certain packages - like Glib - still don't work
  dnl properly with newer compilers.
  save_CFLAGS="$CFLAGS"
  CFLAGS="$CFLAGS -fno-strict-aliasing"
  AC_MSG_CHECKING([whether $CC accepts -fno-strict-aliasing])
  AC_COMPILE_IFELSE(AC_LANG_SOURCE([int x;]), [
    AC_MSG_RESULT([yes])
    PLATFORM_CFLAGS="$PLATFORM_CFLAGS -fno-strict-aliasing"
  ], [
    AC_MSG_RESULT([no])
  ])
  CFLAGS="$save_CFLAGS"

  dnl Make sure we detect possible errors
  PLATFORM_CFLAGS="$PLATFORM_CFLAGS -Werror -Wall"

  dnl Paranoia for --enable-debug=full
  if test x"$enable_debug" = x"full"; then
    PLATFORM_CFLAGS="$PLATFORM_CFLAGS -O0 -g3"
    PLATFORM_CPPFLAGS="$PLATFORM_CPPFLAGS -DG_DISABLE_DEPRECATED -DG_ENABLE_DEBUG"
  fi
else
  dnl Disable object cast checks
  PLATFORM_CPPFLAGS="$PLATFORM_CPPFLAGS -DG_DISABLE_CAST_CHECKS"

  dnl Disable all checks for --enable-debug=no
  if test x"$enable_debug" = x"no"; then
    PLATFORM_CPPFLAGS="$PLATFORM_CPPFLAGS -DG_DISABLE_ASSERT -DG_DISABLE_CHECKS"
  fi
fi
AC_MSG_RESULT([$enable_debug])

dnl **************************************
dnl *** Check for linker optimizations ***
dnl **************************************
AC_MSG_CHECKING([whether $LD accepts -O1])
case `$LD -O1 -v 2>&1 </dev/null` in
*GNU* | *'with BFD'*)
  PLATFORM_LDFLAGS="$PLATFORM_LDFLAGS -Wl,-O1"
  AC_MSG_RESULT([yes])
  ;;
*)
  AC_MSG_RESULT([no])
  ;;
esac

dnl *********************************
dnl *** Substitute platform flags ***
dnl *********************************
AC_MSG_CHECKING([PLATFORM_CPPFLAGS])
AC_MSG_RESULT([$PLATFORM_CPPFLAGS])
AC_SUBST([PLATFORM_CPPFLAGS])
AC_MSG_CHECKING([PLATFORM_CFLAGS])
AC_MSG_RESULT([$PLATFORM_CFLAGS])
AC_SUBST([PLATFORM_CFLAGS])
AC_MSG_CHECKING([PLATFORM_LDFLAGS])
AC_MSG_RESULT([$PLATFORM_LDFLAGS])
AC_SUBST([PLATFORM_LDFLAGS])

AC_OUTPUT([
Makefile
icons/Makefile
icons/16x16/Makefile
icons/24x24/Makefile
icons/48x48/Makefile
po/Makefile.in
thunar-vcs-plugin/Makefile
tvp-svn-helper/Makefile
tvp-git-helper/Makefile
])

